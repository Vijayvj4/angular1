"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var toast_options_1 = require("./toast-options");
var platform_browser_1 = require("@angular/platform-browser");
require("rxjs/add/operator/first");
var Subject_1 = require("rxjs/Subject");
var ɵngcc0 = require('@angular/core');
var ɵngcc1 = require('@angular/platform-browser');
var ɵngcc2 = require('./toast-options');
var ɵngcc3 = require('@angular/common');

function ToastContainer_div_2_div_1_Template(rf, ctx) { if (rf & 1) {
    var _r9 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 9);
    ɵngcc0.ɵɵlistener("click", function ToastContainer_div_2_div_1_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r9); var toast_r2 = ɵngcc0.ɵɵnextContext().$implicit; var ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.removeToast(toast_r2); });
    ɵngcc0.ɵɵtext(1, "\u00D7 ");
    ɵngcc0.ɵɵelementEnd();
} }
function ToastContainer_div_2_div_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var toast_r2 = ɵngcc0.ɵɵnextContext().$implicit;
    var ctx_r4 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(toast_r2.config.titleClass || ctx_r4.titleClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(toast_r2.title);
} }
function ToastContainer_div_2_span_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 10);
} if (rf & 2) {
    var toast_r2 = ɵngcc0.ɵɵnextContext().$implicit;
    var ctx_r5 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(toast_r2.config.messageClass || ctx_r5.messageClass);
    ɵngcc0.ɵɵproperty("innerHTML", ctx_r5.sanitizer.bypassSecurityTrustHtml(toast_r2.message), ɵngcc0.ɵɵsanitizeHtml);
} }
function ToastContainer_div_2_span_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span");
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var toast_r2 = ɵngcc0.ɵɵnextContext().$implicit;
    var ctx_r6 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMap(toast_r2.config.messageClass || ctx_r6.messageClass);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(toast_r2.message);
} }
function ToastContainer_div_2_Template(rf, ctx) { if (rf & 1) {
    var _r14 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "div", 3);
    ɵngcc0.ɵɵlistener("@inOut.done", function ToastContainer_div_2_Template_div_animation_inOut_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r14); var ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.onAnimationEnd($event); })("click", function ToastContainer_div_2_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); var toast_r2 = ctx.$implicit; var ctx_r15 = ɵngcc0.ɵɵnextContext(); return ctx_r15.clicked(toast_r2); });
    ɵngcc0.ɵɵtemplate(1, ToastContainer_div_2_div_1_Template, 2, 0, "div", 4);
    ɵngcc0.ɵɵtemplate(2, ToastContainer_div_2_div_2_Template, 2, 4, "div", 5);
    ɵngcc0.ɵɵelementStart(3, "div", 6);
    ɵngcc0.ɵɵtemplate(4, ToastContainer_div_2_span_4_Template, 1, 4, "span", 7);
    ɵngcc0.ɵɵtemplate(5, ToastContainer_div_2_span_5_Template, 2, 4, "span", 8);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var toast_r2 = ctx.$implicit;
    var ctx_r1 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵclassMapInterpolate1("toast toast-", toast_r2.type, "");
    ɵngcc0.ɵɵproperty("@inOut", ctx_r1.animate);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", toast_r2.config.showCloseButton);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", toast_r2.title);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitch", toast_r2.config.enableHTML);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngSwitchCase", true);
} }
var ToastContainer = (function () {
    function ToastContainer(sanitizer, cdr, _zone, options) {
        this.sanitizer = sanitizer;
        this.cdr = cdr;
        this._zone = _zone;
        this.position = 'fixed';
        this.toasts = [];
        this._fresh = true;
        this._onEnter = new Subject_1.Subject();
        this._onExit = new Subject_1.Subject();
        Object.assign(this, options);
    }
    ToastContainer.prototype.onEnter = function () {
        return this._onEnter.asObservable();
    };
    ToastContainer.prototype.onExit = function () {
        return this._onExit.asObservable();
    };
    ToastContainer.prototype.addToast = function (toast) {
        if (this.positionClass.indexOf('top') > 0) {
            if (this.newestOnTop) {
                this.toasts.unshift(toast);
            }
            else {
                this.toasts.push(toast);
            }
            if (this.toasts.length > this.maxShown) {
                var diff = this.toasts.length - this.maxShown;
                if (this.newestOnTop) {
                    this.toasts.splice(this.maxShown);
                }
                else {
                    this.toasts.splice(0, diff);
                }
            }
        }
        else {
            this.toasts.unshift(toast);
            if (this.toasts.length > this.maxShown) {
                this.toasts.splice(this.maxShown);
            }
        }
        if (this.animate === null && this._fresh) {
            this._fresh = false;
            this._onEnter.next();
            this._onEnter.complete();
        }
        this.cdr.detectChanges();
    };
    ToastContainer.prototype.removeToast = function (toast) {
        if (toast.timeoutId) {
            clearTimeout(toast.timeoutId);
            toast.timeoutId = null;
        }
        this.toasts = this.toasts.filter(function (t) {
            return t.id !== toast.id;
        });
    };
    ToastContainer.prototype.removeAllToasts = function () {
        this.toasts = [];
    };
    ToastContainer.prototype.clicked = function (toast) {
        if (this.onToastClicked) {
            this.onToastClicked(toast);
        }
    };
    ToastContainer.prototype.anyToast = function () {
        return this.toasts.length > 0;
    };
    ToastContainer.prototype.findToast = function (toastId) {
        for (var _i = 0, _a = this.toasts; _i < _a.length; _i++) {
            var toast = _a[_i];
            if (toast.id === toastId) {
                return toast;
            }
        }
        return null;
    };
    ToastContainer.prototype.onAnimationEnd = function (event) {
        var _this = this;
        if (event.toState === 'void' && !this.anyToast()) {
            this._ngExit();
        }
        else if (this._fresh && event.fromState === 'void') {
            // notify when first animation is done
            this._fresh = false;
            this._zone.run(function () {
                _this._onEnter.next();
                _this._onEnter.complete();
            });
        }
    };
    ToastContainer.prototype._ngExit = function () {
        var _this = this;
        this._zone.onMicrotaskEmpty.first().subscribe(function () {
            _this._onExit.next();
            _this._onExit.complete();
        });
    };
    ToastContainer.prototype.ngOnDestroy = function () {
        this._ngExit();
    };
ToastContainer.ɵfac = function ToastContainer_Factory(t) { return new (t || ToastContainer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.DomSanitizer), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ToastOptions)); };
ToastContainer.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ToastContainer, selectors: [["toast-container"]], decls: 3, vars: 6, consts: [["id", "toast-container"], ["toastContainer", ""], [3, "class", "click", 4, "ngFor", "ngForOf"], [3, "click"], ["class", "toast-close-button", 3, "click", 4, "ngIf"], [3, "class", 4, "ngIf"], [3, "ngSwitch"], [3, "class", "innerHTML", 4, "ngSwitchCase"], [3, "class", 4, "ngSwitchDefault"], [1, "toast-close-button", 3, "click"], [3, "innerHTML"]], template: function ToastContainer_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "div", 0, 1);
        ɵngcc0.ɵɵtemplate(2, ToastContainer_div_2_Template, 6, 8, "div", 2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵclassMap(ctx.positionClass);
        ɵngcc0.ɵɵstyleProp("position", ctx.position);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngForOf", ctx.toasts);
    } }, directives: [ɵngcc3.NgForOf, ɵngcc3.NgIf, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc3.NgSwitchDefault], encapsulation: 2, data: { animation: [
            core_1.trigger('inOut', [
                core_1.state('flyRight, flyLeft', core_1.style({ opacity: 1, transform: 'translateX(0)' })),
                core_1.state('fade', core_1.style({ opacity: 1 })),
                core_1.state('slideDown, slideUp', core_1.style({ opacity: 1, transform: 'translateY(0)' })),
                core_1.transition('void => flyRight', [
                    core_1.style({
                        opacity: 0,
                        transform: 'translateX(100%)'
                    }),
                    core_1.animate('0.2s ease-in')
                ]),
                core_1.transition('flyRight => void', [
                    core_1.animate('0.2s 10ms ease-out', core_1.style({
                        opacity: 0,
                        transform: 'translateX(100%)'
                    }))
                ]),
                core_1.transition('void => flyLeft', [
                    core_1.style({
                        opacity: 0,
                        transform: 'translateX(-100%)'
                    }),
                    core_1.animate('0.2s ease-in')
                ]),
                core_1.transition('flyLeft => void', [
                    core_1.animate('0.2s 10ms ease-out', core_1.style({
                        opacity: 0,
                        transform: 'translateX(-100%)'
                    }))
                ]),
                core_1.transition('void => fade', [
                    core_1.style({
                        opacity: 0
                    }),
                    core_1.animate('0.3s ease-in')
                ]),
                core_1.transition('fade => void', [
                    core_1.animate('0.3s 10ms ease-out', core_1.style({
                        opacity: 0
                    }))
                ]),
                core_1.transition('void => slideDown', [
                    core_1.style({
                        opacity: 0,
                        transform: 'translateY(-200%)'
                    }),
                    core_1.animate('0.3s ease-in')
                ]),
                core_1.transition('slideDown => void', [
                    core_1.animate('0.3s 10ms ease-out', core_1.style({
                        opacity: 0,
                        transform: 'translateY(-200%)'
                    }))
                ]),
                core_1.transition('void => slideUp', [
                    core_1.style({
                        opacity: 0,
                        transform: 'translateY(200%)'
                    }),
                    core_1.animate('0.3s ease-in')
                ]),
                core_1.transition('slideUp => void', [
                    core_1.animate('0.3s 10ms ease-out', core_1.style({
                        opacity: 0,
                        transform: 'translateY(200%)'
                    }))
                ]),
            ]),
        ] } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ToastContainer, [{
        type: core_1.Component,
        args: [{
                selector: 'toast-container',
                template: "\n    <div #toastContainer id=\"toast-container\" [style.position]=\"position\" class=\"{{positionClass}}\">\n      <div *ngFor=\"let toast of toasts\" [@inOut]=\"animate\" (@inOut.done)=\"onAnimationEnd($event)\" class=\"toast toast-{{toast.type}}\" \n      (click)=\"clicked(toast)\">\n        <div class=\"toast-close-button\" *ngIf=\"toast.config.showCloseButton\" (click)=\"removeToast(toast)\">&times;\n        </div> \n        <div *ngIf=\"toast.title\" class=\"{{toast.config.titleClass || titleClass}}\">{{toast.title}}</div>\n        <div [ngSwitch]=\"toast.config.enableHTML\">\n          <span *ngSwitchCase=\"true\" class=\"{{toast.config.messageClass || messageClass}}\" [innerHTML]=\"sanitizer.bypassSecurityTrustHtml(toast.message)\"></span>\n          <span *ngSwitchDefault class=\"{{toast.config.messageClass || messageClass}}\">{{toast.message}}</span>\n        </div>             \n      </div>\n    </div>\n    ",
                animations: [
                    core_1.trigger('inOut', [
                        core_1.state('flyRight, flyLeft', core_1.style({ opacity: 1, transform: 'translateX(0)' })),
                        core_1.state('fade', core_1.style({ opacity: 1 })),
                        core_1.state('slideDown, slideUp', core_1.style({ opacity: 1, transform: 'translateY(0)' })),
                        core_1.transition('void => flyRight', [
                            core_1.style({
                                opacity: 0,
                                transform: 'translateX(100%)'
                            }),
                            core_1.animate('0.2s ease-in')
                        ]),
                        core_1.transition('flyRight => void', [
                            core_1.animate('0.2s 10ms ease-out', core_1.style({
                                opacity: 0,
                                transform: 'translateX(100%)'
                            }))
                        ]),
                        core_1.transition('void => flyLeft', [
                            core_1.style({
                                opacity: 0,
                                transform: 'translateX(-100%)'
                            }),
                            core_1.animate('0.2s ease-in')
                        ]),
                        core_1.transition('flyLeft => void', [
                            core_1.animate('0.2s 10ms ease-out', core_1.style({
                                opacity: 0,
                                transform: 'translateX(-100%)'
                            }))
                        ]),
                        core_1.transition('void => fade', [
                            core_1.style({
                                opacity: 0
                            }),
                            core_1.animate('0.3s ease-in')
                        ]),
                        core_1.transition('fade => void', [
                            core_1.animate('0.3s 10ms ease-out', core_1.style({
                                opacity: 0
                            }))
                        ]),
                        core_1.transition('void => slideDown', [
                            core_1.style({
                                opacity: 0,
                                transform: 'translateY(-200%)'
                            }),
                            core_1.animate('0.3s ease-in')
                        ]),
                        core_1.transition('slideDown => void', [
                            core_1.animate('0.3s 10ms ease-out', core_1.style({
                                opacity: 0,
                                transform: 'translateY(-200%)'
                            }))
                        ]),
                        core_1.transition('void => slideUp', [
                            core_1.style({
                                opacity: 0,
                                transform: 'translateY(200%)'
                            }),
                            core_1.animate('0.3s ease-in')
                        ]),
                        core_1.transition('slideUp => void', [
                            core_1.animate('0.3s 10ms ease-out', core_1.style({
                                opacity: 0,
                                transform: 'translateY(200%)'
                            }))
                        ]),
                    ]),
                ]
            }]
    }], function () { return [{ type: ɵngcc1.DomSanitizer }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.ToastOptions }]; }, null); })();
    return ToastContainer;
}());
/** @nocollapse */
ToastContainer.ctorParameters = function () { return [
    { type: platform_browser_1.DomSanitizer, },
    { type: core_1.ChangeDetectorRef, },
    { type: core_1.NgZone, },
    { type: toast_options_1.ToastOptions, },
]; };
exports.ToastContainer = ToastContainer;

//# sourceMappingURL=data:application/json;charset=utf-8;base64,